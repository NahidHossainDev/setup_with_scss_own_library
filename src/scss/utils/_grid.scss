@use "sass:math";
@use "./breakpoints" as *;

$grid-columns: 12;
$grid-gaps: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
);
$layout-values: (
    "start": flex-start,
    "end": flex-end,
    "center": center,
    "between": space-between,
    "around": space-around,
);

//base layout classes
.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

//grid gaps
@each $key, $val in $grid-gaps {
    .gap-#{key} > * {
        padding: $val;
    }
    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}

// justify content- classes
@each $key, $val in $layout-values {
    .justify-content-#{$key} {
        justify-content: $val;
    }
}

// col-classes
@include xs {
    @for $i from 1 through $grid-columns {
        .col-xs-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include sm {
    @for $i from 1 through $grid-columns {
        .col-sm-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include md {
    @for $i from 1 through $grid-columns {
        .col-md-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include lg {
    @for $i from 1 through $grid-columns {
        .col-lg-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include xl {
    @for $i from 1 through $grid-columns {
        .col-xl-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include xxl {
    @for $i from 1 through $grid-columns {
        .col-xxl-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
